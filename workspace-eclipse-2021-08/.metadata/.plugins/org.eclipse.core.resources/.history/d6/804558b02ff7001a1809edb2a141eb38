<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!-- 
/**
  * @Description : 권한 SQL
  * @Modification Information
  * @
  * @   수정일       수정자               수정내용
  * @ 2018.05.29     hjh               최초작성
  *
  */ 
-->
<sqlMap namespace="authDAO">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap" />
    <typeAlias alias="authVO" type="egovframework.mng.auth.vo.AuthVO" />

    <!-- 권한 페이징 조회 -->
    <select id="authDAO.selectAuthPage" parameterClass="egovframework.mng.auth.vo.AuthVO" resultClass="egovMap">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.selectAuthPage.01 20180607 */
        SELECT P.* 
          FROM (
                SELECT ROWNUM AS ROW_NUM
                     , T.* 
                  FROM (
                        SELECT COUNT (*) OVER () AS ROW_CNT
                             , A.AUTHOR_CODE          /* 권한코드(PK) */
                             , A.AUTHOR_NM            /* 권한명       */
                             , A.STTUS_CODE           /* 상태코드     */
                             , A.AUTHOR_DC            /* 권한설명     */
                             , A.REGIST_DT            /* 등록일시     */
                             , A.REGISTER_ID          /* 등록자ID     */
                             , A.LAST_UPDT_DT         /* 최종수정일시 */
                             , A.LAST_UPDUSR_ID       /* 최종수정자ID */
                             , FN_GET_CMMN_CODENM(A.STTUS_CODE) AS STTUS_NM  /* 상태명       */
                          FROM TCM_AUTHOR A           /* 권한         */
                         WHERE 1 = 1
        ]]>
        <!--  검색조건 : 셀렉트박스 전체 -->
        <isEmpty property="searchCondition">
            <isNotEmpty property="searchKeyword">
                           /* 검색조건 : 권한코드 OR 권한명 */
                           AND (
                               UPPER(A.AUTHOR_CODE) LIKE '%' || UPPER(#searchKeyword#) || '%'
                               OR
                               UPPER(A.AUTHOR_NM)   LIKE '%' || UPPER(#searchKeyword#) || '%'
                               )
            </isNotEmpty>
        </isEmpty>
        <!--  검색조건 : 셀렉트박스 !전체 -->
        <isNotEmpty property="searchCondition">
            <isNotEmpty property="searchKeyword">
                <isEqual property="searchCondition" compareValue="authorCode">
                           /* 검색조건 : 권한코드 */
                           AND UPPER(A.AUTHOR_CODE) LIKE '%' || UPPER(#searchKeyword#) || '%'
                </isEqual>
                <isEqual property="searchCondition" compareValue="authorNm">
                           /* 검색조건 : 권한명 */
                           AND UPPER(A.AUTHOR_NM)   LIKE '%' || UPPER(#searchKeyword#) || '%'
                </isEqual>
            </isNotEmpty>
        </isNotEmpty>
        <![CDATA[
                         ORDER 
                            BY A.AUTHOR_CODE ASC
                       ) T
                 WHERE ROWNUM <= (#currentPageNo# * #recordCountPerPage#)
               ) P
         WHERE ROW_NUM >= ((#currentPageNo# - 1) * #recordCountPerPage# + 1)
        ]]>
    </select>
    
    <!-- 권한 목록 조회 -->
    <select id="authDAO.selectAuthList" parameterClass="authVO" resultClass="egovMap">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.selectAuthList.01 20180607 */
        SELECT A.AUTHOR_CODE          /* 권한코드(PK) */
             , A.AUTHOR_NM            /* 권한명       */
             , A.STTUS_CODE           /* 상태코드     */
             , A.AUTHOR_DC            /* 권한설명     */
             , A.REGIST_DT            /* 등록일시     */
             , A.REGISTER_ID          /* 등록자ID     */
             , A.LAST_UPDT_DT         /* 최종수정일시 */
             , A.LAST_UPDUSR_ID       /* 최종수정자ID */
             , FN_GET_CMMN_CODENM(A.STTUS_CODE) AS STTUS_NM  /* 상태명       */
        ]]>
        <isEqual property="queryType" compareValue="U">
             /* 해당 권한그룹과 매핑 여부 */
             , (SELECT DECODE(COUNT(*), 0, 'N', 'Y') FROM TCM_AUTHOR_GROUP_MNG S WHERE S.AUTHOR_CODE = A.AUTHOR_CODE AND S.AUTHOR_GROUP_CODE = #authorGroupCode#)
        </isEqual>  
        <isNotEqual property="queryType" compareValue="U">
             /* 해당 권한그룹과 매핑 여부 */
             , 'N'
        </isNotEqual>
        <![CDATA[
               AS REGIST_AT           /* 해당 권한그룹과 매핑 여부 */
          FROM TCM_AUTHOR A           /* 권한         */
         WHERE 1 = 1 
        ]]>
        <isNotEmpty property="sttusCode">
           /* 권한 상태코드 */
           AND A.STTUS_CODE = #sttusCode#
        </isNotEmpty>
        <isEqual property="queryType" compareValue="D">
        <![CDATA[
           /* 해당 권한그룹과 매핑한 경우만 조회 */
           AND EXISTS (SELECT S.AUTHOR_GROUP_CODE FROM TCM_AUTHOR_GROUP_MNG S WHERE S.AUTHOR_CODE = A.AUTHOR_CODE AND S.AUTHOR_GROUP_CODE = #authorGroupCode#)
        ]]>
        </isEqual>
        <![CDATA[
         ORDER
            BY A.AUTHOR_CODE ASC
        ]]>
    </select>
    
    <!-- 권한 상세 조회 -->
    <select id="authDAO.selectAuthDetail" parameterClass="authVO" resultClass="egovMap">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.selectAuthDetail.01 20180607 */
        SELECT A.AUTHOR_CODE          /* 권한코드(PK) */
             , A.AUTHOR_NM            /* 권한명       */
             , A.STTUS_CODE           /* 상태코드     */
             , A.AUTHOR_DC            /* 권한설명     */
             , A.REGIST_DT            /* 등록일시     */
             , A.REGISTER_ID          /* 등록자ID     */
             , A.LAST_UPDT_DT         /* 최종수정일시 */
             , A.LAST_UPDUSR_ID       /* 최종수정자ID */
             , FN_GET_CMMN_CODENM(A.STTUS_CODE) AS STTUS_NM  /* 상태명       */
          FROM TCM_AUTHOR A           /* 권한         */
         WHERE 1 = 1 
           AND A.AUTHOR_CODE = #authorCode#
        ]]>
    </select>
    
    <!-- 권한 개수 조회 -->
    <select id="authDAO.selectAuthCount" parameterClass="authVO" resultClass="int">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.selectAuthCount.01 20180607 */
        SELECT COUNT(*)
          FROM TCM_AUTHOR A     /* 권한         */
         WHERE A.AUTHOR_CODE = #authorCode#
        ]]>
    </select>
    
    <!-- 권한 등록 -->
    <insert id="authDAO.insertAuth" parameterClass="authVO">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.insertAuth.01 20180607 */
        INSERT 
          INTO TCM_AUTHOR       /* 권한         */
             (                  
               AUTHOR_CODE      /* 권한코드(PK) */                       
             , AUTHOR_NM        /* 권한명       */                        
             , STTUS_CODE       /* 상태코드     */
             , AUTHOR_DC        /* 권한설명     */                         
             , REGIST_DT        /* 등록일시     */ 
             , REGISTER_ID      /* 등록자ID     */                          
             , LAST_UPDT_DT     /* 최종수정일시 */                 
             , LAST_UPDUSR_ID   /* 최종수정자ID */                                  
             )                  
        VALUES                  
             (                  
               #authorCode#     /* 권한코드(PK) */                
             , #authorNm#       /* 권한명       */                 
             , #sttusCode#      /* 상태코드     */                 
             , #authorDc#       /* 권한설명     */                  
             , SYSDATE          /* 등록일시     */                    
             , #loginVO.userId#     /* 등록자ID     */                   
             , SYSDATE          /* 최종수정일시 */                    
             , #loginVO.userId#     /* 최종수정자ID */                   
             )
        ]]>
    </insert>

    <!-- 권한 수정 -->
    <update id="authDAO.updateAuth" parameterClass="authVO">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.updateAuth.01 20180607 */
        UPDATE TCM_AUTHOR                        /* 권한         */
           SET AUTHOR_NM        = #authorNm#     /* 권한명       */
             , STTUS_CODE       = #sttusCode#    /* 상태코드     */           
             , AUTHOR_DC        = #authorDc#     /* 권한설명     */              
             , LAST_UPDT_DT     = SYSDATE        /* 최종수정일시 */                 
             , LAST_UPDUSR_ID   = #loginVO.userId#   /* 최종수정자ID */                
         WHERE AUTHOR_CODE      = #authorCode#   /* 권한코드(PK) */
        ]]>
    </update>
    
    <!-- 권한 삭제 -->
    <delete id="authDAO.deleteAuth" parameterClass="authVO">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.deleteAuth.01 20180607 */
        DELETE 
          FROM TCM_AUTHOR                 /* 권한        */
         WHERE AUTHOR_CODE = #authorCode# /* 권한코드(PK) */
        ]]>
    </delete>

    <!-- 권한별메뉴 등록 -->
    <insert id="authDAO.insertAuthMenuMng" parameterClass="authVO">
        <![CDATA[
/* Auth_SQL_Tibero.authDAO.insertAuthMenuMng.01 20180615 */
INSERT INTO
  /* 권한별메뉴관리 테이블*/
  TCM_AUTHOR_MENU_MNG (
      AUTHOR_CODE      /* 권한코드(PK) */
    , MENU_CODE        /* 메뉴코드 */
    , REGIST_DT        /* 등록일시 */
    , REGISTER_ID      /* 등록자ID */
    /* 생성 권한 */
    , ROLL_CREATE
    /* 수정 권한 */
    , ROLL_UPDATE
    /* 삭제 권한 */
    , ROLL_DELETE
  ) VALUES (
    /* 권한코드(PK) */
      #authorCode#
    /* 메뉴코드 */
    , #menuCode#
    /* 등록일시 */
    , SYSDATE
    /* 등록자ID */
    , #loginVO.userId#
    /* 생성 권한 */
    , #rollCreate#
    /* 수정 권한 */
    , #rollUpdate#
    /* 삭제 권한 */
    , #rollDelete#
  )
        ]]>
    </insert>
    
    <!-- 권한별메뉴 삭제 -->
    <delete id="authDAO.deleteAuthMenuMng" parameterClass="authVO">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.deleteAuthMenuMng.01 20180615 */
        DELETE 
          FROM TCM_AUTHOR_MENU_MNG        /* 권한        */
         WHERE AUTHOR_CODE = #authorCode# /* 권한코드(PK) */
        ]]>
    </delete>
    
    <!-- 메뉴 조회 -->
    <select id="authDAO.selectMenuList" parameterClass="String" resultClass="egovMap" remapResults="true">
        <![CDATA[
        /* Auth_SQL_Tibero.authDAO.selectMenuList.01 20180615 FUCK */
SELECT
  MN.MENU_NM
  , MN.MENU_CODE
  , MN.UPPER_MENU_CODE 
  , NVL2( ATMN.AUTHOR_CODE, 'Y', 'N') AS REGIST_AT
  , (CASE ATMN.ROLL_CREATE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_CREATE
  , (CASE ATMN.ROLL_UPDATE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_UPDATE
  , (CASE ATMN.ROLL_DELETE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_DELETE
  , TO_CHAR( MN.LVL ) AS LVL
  , MN.HAS_LEAF
  , MN.MENU_ORDR AS ORDR
FROM
  TCM_AUTHOR_MENU_MNG AS ATMN
  RIGHT OUTER JOIN (
    SELECT
      MENU_CODE
      , UPPER_MENU_CODE 
      , LPAD(' ', 2 * (LEVEL - 1)) || MENU_NM AS MENU_NM
      , MENU_ORDR
      , LEVEL AS LVL
      , ( CASE CONNECT_BY_ISLEAF
        WHEN '1' THEN 'FALSE'
        ELSE 'TRUE'
      END ) AS HAS_LEAF
    FROM TCM_MENU
    START WITH UPPER_MENU_CODE = 'MNU00000'
    CONNECT BY PRIOR  MENU_CODE = UPPER_MENU_CODE
  ) AS MN
  ON MN.MENU_CODE = ATMN.MENU_CODE
  AND ATMN.AUTHOR_CODE = #authorCode#
        ]]>
    </select>
    <!-- 
  ORDER BY MENU_ORDR, MENU_CODE
/*
SELECT
  MN.MENU_NM
  , MN.MENU_CODE
  , MN.UPPER_MENU_CODE 
  , NVL2( ATMN.AUTHOR_CODE, 'Y', 'N') AS REGIST_AT
  , (CASE ATMN.ROLL_CREATE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_CREATE
  , (CASE ATMN.ROLL_UPDATE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_UPDATE
  , (CASE ATMN.ROLL_DELETE
      WHEN 1 THEN 'Y'
      ELSE 'N'
    END ) AS ROLL_DELETE
FROM
  TCM_AUTHOR_MENU_MNG AS ATMN
  RIGHT OUTER JOIN 
    TCM_MENU AS MN
  ON MN.MENU_CODE = ATMN.MENU_CODE
  AND ATMN.AUTHOR_CODE = #authorCode#
ORDER BY MENU_ORDR, MENU_CODE

*/
    
/*        SELECT A.MENU_CODE
             , A.UPPER_MENU_CODE
             , A.MENU_NM
             , (SELECT DECODE(COUNT(*), 0, 'N', 'Y') FROM TCM_AUTHOR_MENU_MNG S WHERE S.MENU_CODE = A.MENU_CODE AND S.AUTHOR_CODE = #authorCode#) AS REGIST_AT
          FROM TCM_MENU A 
         ORDER 
            BY MENU_ORDR, MENU_CODE
*/
    
     -->
    
</sqlMap>