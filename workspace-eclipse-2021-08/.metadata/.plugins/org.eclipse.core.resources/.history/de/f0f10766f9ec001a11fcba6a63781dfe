package egovframework.ctrl.prvnbeOper.web;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import egovframework.com.cmmn.util.EgovConvertUtil;
import egovframework.com.cmmn.web.CmmnAbstractController;
import egovframework.ctrl.prvnbeOper.service.PrvnbeOperService;
import egovframework.ctrl.prvnbeOper.vo.PrvnbeOperCtDtlVO;
import egovframework.ctrl.prvnbeOper.vo.PrvnbeOperCtSearchVO;
import egovframework.ctrl.prvnbeOper.vo.PrvnbeOperCtVO;
import egovframework.rte.fdl.cmmn.exception.EgovBizException;
import egovframework.rte.psl.dataaccess.util.EgovMap;

/**
 * 2018.06.15
 * @author khj
 */
@Controller
public class PrvnbeOperController extends CmmnAbstractController {

	@Resource(name = "prvnbeOperService")
	private PrvnbeOperService prvnbeOperService;

	
	/**
	 * 방제운영비 관리 목록을 조회한다.
	 * @param model
	 * @param request
	 * @param searchVO
	 * @return "prvnbeOper/selectPrvnbeOperCtList"
	 * @throws Exception
	 */
	//@RequestMapping(value = "/ext/prvnbeOper/prvnbeOperCtList.do")
	@RequestMapping(value = {"/ext/prvnbeOper/prvnbeOperCtList.do", "/ctrl/prvnbeOper/prvnbeOperCtList.do"})
	public String selectPrvnbeOperCtList(ModelMap model,HttpServletRequest request,
			@ModelAttribute("prvnbeOperCtSearchVO") PrvnbeOperCtSearchVO searchVO) throws Exception {
		
		List<EgovMap> prvnbeOperCtList = prvnbeOperService.selectPrvnbeOperCtList(searchVO);
		addSearchModelComboList(model,searchVO);
		model.addAttribute("prvnbeOperCtList", prvnbeOperCtList);
		model.addAttribute("searchVO", searchVO);
		
		return "/ctrl/prvnbeOper/prvnbeOperCtList";
	}
	
	/**
	 * 방제운영비 관리 등록 화면으로 이동한다.
	 * @param model
	 * @param request
	 * @param cmd
	 * @param vo
	 * @return "prvnbeOper/prvnbeOperCtWrite"
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/insertPrvnbeOperCtForm.do")
	public String insertPrvnbeOperCtForm(ModelMap model, HttpServletRequest request,
			@RequestParam(value = "cmd", required = false) String cmd,
			@ModelAttribute("prvnbeOperCtVO") PrvnbeOperCtVO vo) throws Exception {

		model.addAttribute("cmd", cmd);
		return "/ctrl/prvnbeOper/prvnbeOperCtWrite";
	}
	
	/**
	 * 방제운영비 관리를 등록한다
	 * @param model
	 * @param request
	 * @param prvnbeOperCtVO
	 * @param prvnbeOperCtDtlVO
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/insertPrvnbeOperCt.do")
	public String insertPrvnbeOperCt(ModelMap model,HttpServletRequest request,
			@ModelAttribute("prvnbeOperCtVO") PrvnbeOperCtVO prvnbeOperCtVO,
			@ModelAttribute("prvnbeOperCtDtlVO") PrvnbeOperCtDtlVO prvnbeOperCtDtlVO)throws Exception {

		try {
			// INSERT
			String prvnbeOperCtSn = prvnbeOperService.insertPrvnbeOperCt(prvnbeOperCtVO);
			List<PrvnbeOperCtDtlVO> list = prvnbeOperCtDtlVO.getPrvnbeOperCtDtlVOList(); 
			
			if(list!=null && list.size()>0){
				for (PrvnbeOperCtDtlVO vo : list) {
					vo.setPrvnbeOperCtSn(prvnbeOperCtSn);
					vo.setWrterId(prvnbeOperCtVO.getWrterId());
					vo.setLastUpdusrId(prvnbeOperCtVO.getLastUpdusrId());
				}
				prvnbeOperService.insertPrvnbeOperCtDtl(list);
			}
				
			StringBuffer paramSb = new StringBuffer();
			paramSb.append("?searchCondition=" + prvnbeOperCtVO.getSearchCondition());
			paramSb.append("&searchKeyword=" + prvnbeOperCtVO.getSearchKeyword());
			paramSb.append("&currentPageNo=" + prvnbeOperCtVO.getCurrentPageNo());
			paramSb.append("&menuCode=" + prvnbeOperCtVO.getMenuCode());
			paramSb.append("&searchYr=" + prvnbeOperCtVO.getSearchYr());
			paramSb.append("&searchNmpaOfeCode=" + prvnbeOperCtVO.getSearchNmpaOfeCode());
			paramSb.append("&searchIsnttName=" + prvnbeOperCtVO.getSearchIsnttName());
			paramSb.append("&searchExcutDtilsCode=" + prvnbeOperCtVO.getSearchExcutDtilsCode());
			paramSb.append("&sn=" + prvnbeOperCtVO.getSn());
			model.addAttribute("destUrl", "/ext/prvnbeOper/prvnbeOperCtDetail.do"+paramSb.toString());
			model.addAttribute("resultMessage", egovMessageSource.getMessage("success.common.insert"));		
		
		} catch (EgovBizException e) {
			model.addAttribute("resultMessage", e.getMessage());
		} catch (Exception e) {
			model.addAttribute("message", egovMessageSource.getMessage("fail.common.msg"));
		}		
		
		return "/cmmn/messageAlert";
	}
	
	/**
	 * 방제운영비 관리 상세 화면으로 이동한다
	 * @param model
	 * @param searchVO
	 * @return "prvnbeOper/prvnbeOperCtDetail"
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/prvnbeOperCtDetail.do")
	public String selectPrvnbeOperCtDetail(ModelMap model,
			@ModelAttribute("searchVO") PrvnbeOperCtVO searchVO) throws Exception {

		EgovMap prvnbeOperCtVO = prvnbeOperService.selectPrvnbeOperCtDetail(searchVO);
		List<EgovMap> prvnbeOperCtDtlVOList = prvnbeOperService.selectPrvnbeOperCtDtlDetail(searchVO);
		model.addAttribute("prvnbeOperCtVO", prvnbeOperCtVO);
		model.addAttribute("prvnbeOperCtDtlVOList", prvnbeOperCtDtlVOList);
		return "/ctrl/prvnbeOper/prvnbeOperCtDetail";
	}
	
	/**
	 * 방제운영비 관리 삭제한다
	 * @param model
	 * @param request
	 * @param prvnbeOperCtVO
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/deletePrvnbeOperCtForm.do")
	public String deletePrvnbeOperCt(ModelMap model,HttpServletRequest request,
			@ModelAttribute("prvnbeOperCtVO") PrvnbeOperCtVO prvnbeOperCtVO) throws Exception {

		
		try {
			prvnbeOperService.deletePrvnbeOperCt(prvnbeOperCtVO);
			
			StringBuffer paramSb = new StringBuffer();
			paramSb.append("?searchCondition=" + prvnbeOperCtVO.getSearchCondition());
			paramSb.append("&searchKeyword=" + prvnbeOperCtVO.getSearchKeyword());
			paramSb.append("&currentPageNo=" + prvnbeOperCtVO.getCurrentPageNo());
			paramSb.append("&menuCode=" + prvnbeOperCtVO.getMenuCode());
			paramSb.append("&searchYr=" + prvnbeOperCtVO.getSearchYr());
			paramSb.append("&searchNmpaOfeCode=" + prvnbeOperCtVO.getSearchNmpaOfeCode());
			paramSb.append("&searchIsnttName=" + prvnbeOperCtVO.getSearchIsnttName());
			paramSb.append("&searchExcutDtilsCode=" + prvnbeOperCtVO.getSearchExcutDtilsCode());
			model.addAttribute("destUrl", "/ext/prvnbeOper/prvnbeOperCtList.do"+paramSb.toString());
			model.addAttribute("resultMessage", egovMessageSource.getMessage("success.common.delete"));		
		
		} catch (EgovBizException e) {
			model.addAttribute("resultMessage", e.getMessage());
		} catch (Exception e) {
			model.addAttribute("message", egovMessageSource.getMessage("fail.common.msg"));
		}		
		
		return "/cmmn/messageAlert";

	}
	
	/**
	 * 방제운영비 관리 수정화면으로 이동한다
	 * @param model
	 * @param bbscttId
	 * @param cmd
	 * @param prvnbeOperCtVO
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/updatePrvnbeOperCtForm.do")
	public String updatePrvnbeOperCtForm(ModelMap model,
			@RequestParam(value = "cmd", required = false) String cmd,
			@ModelAttribute("prvnbeOperCtVO") PrvnbeOperCtVO prvnbeOperCtVO,
			HttpServletRequest request) throws Exception {

		EgovMap prvnbeOperCtVODetailMap = prvnbeOperService.selectPrvnbeOperCtDetail(prvnbeOperCtVO);
		prvnbeOperCtVO = (PrvnbeOperCtVO) EgovConvertUtil.convertMap2Vo(prvnbeOperCtVODetailMap, prvnbeOperCtVO);
		
		List<EgovMap> prvnbeOperCtDtlVOList = prvnbeOperService.selectPrvnbeOperCtDtlDetail(prvnbeOperCtVO);
		model.addAttribute("prvnbeOperCtDtlVOList", prvnbeOperCtDtlVOList);
		model.addAttribute("cmd", cmd);

		return "/ctrl/prvnbeOper/prvnbeOperCtWrite";
	}

	/**
	 * 방제운영비 관리를 수정한다
	 * @param model
	 * @param request
	 * @param mptRequest
	 * @param prvnbeOperCtVO
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/ext/prvnbeOper/updatePrvnbeOperCt.do")
	public String updatePrvnbeOperCt(ModelMap model,HttpServletRequest request,
			@ModelAttribute("prvnbeOperCtVO") PrvnbeOperCtVO prvnbeOperCtVO,
			@ModelAttribute("prvnbeOperCtDtlVO") PrvnbeOperCtDtlVO prvnbeOperCtDtlVO)throws Exception {
	
		try {
			// UDPATE
			prvnbeOperService.updatePrvnbeOperCt(prvnbeOperCtVO);
			List<PrvnbeOperCtDtlVO> list = prvnbeOperCtDtlVO.getPrvnbeOperCtDtlVOList();
			prvnbeOperService.updatePrvnbeOperCtDtl(list);
			
			StringBuffer paramSb = new StringBuffer();
			paramSb.append("?searchCondition=" + prvnbeOperCtVO.getSearchCondition());
			paramSb.append("&searchKeyword=" + prvnbeOperCtVO.getSearchKeyword());
			paramSb.append("&currentPageNo=" + prvnbeOperCtVO.getCurrentPageNo());
			paramSb.append("&menuCode=" + prvnbeOperCtVO.getMenuCode());
			paramSb.append("&searchYr=" + prvnbeOperCtVO.getSearchYr());
			paramSb.append("&searchNmpaOfeCode=" + prvnbeOperCtVO.getSearchNmpaOfeCode());
			paramSb.append("&searchIsnttName=" + prvnbeOperCtVO.getSearchIsnttName());
			paramSb.append("&searchExcutDtilsCode=" + prvnbeOperCtVO.getSearchExcutDtilsCode());
			paramSb.append("&sn=" + prvnbeOperCtVO.getSn());
			model.addAttribute("destUrl", "/ext/prvnbeOper/prvnbeOperCtDetail.do"+paramSb.toString());
			model.addAttribute("resultMessage", egovMessageSource.getMessage("success.common.update"));		
		
		} catch (EgovBizException e) {
			model.addAttribute("resultMessage", e.getMessage());
		} catch (Exception e) {
			model.addAttribute("message", egovMessageSource.getMessage("fail.common.msg"));
		}		
		
		return "/cmmn/messageAlert";
	}

	/** search용 코드 추가 */
	private void addSearchModelComboList(ModelMap model, PrvnbeOperCtSearchVO vo ) throws Exception {
		// 집행내용코드
		String excutDtilsCode= cmmnCodeService.makeCodeSelectTagByValue("PP196", "searchExcutDtilsCode", true, true, vo.getSearchExcutDtilsCode(),"inputsrch vm form-control");
		model.addAttribute("searchExcutDtilsCodeList", excutDtilsCode);
	}
	
}
