package com.gmtc.management;

import java.util.List;
import javax.annotation.Resource;
import org.json.simple.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.support.SessionStatus;
import org.springmodules.validation.commons.DefaultBeanValidator;
import egovframework.com.cmm.ComDefaultCodeVO;
import egovframework.com.cmm.LoginVO;
import egovframework.com.cmm.service.EgovCmmUseService;
import egovframework.let.cop.bbs.service.BoardMaster;
import egovframework.let.cop.bbs.service.BoardMasterVO;
import egovframework.let.cop.bbs.service.EgovBBSAttributeManageService;
import egovframework.let.sym.mnu.mpm.service.EgovMenuManageService;
import egovframework.let.sym.mnu.mpm.service.MenuManageVO;
import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.fdl.security.userdetails.util.EgovUserDetailsHelper;

@Controller
public class MenuController {

  /** EgovMenuManageService */
  @Resource(name = "meunManageService")
  private EgovMenuManageService menuManageService;
  @Resource(name = "EgovCmmUseService")
  private EgovCmmUseService cmmUseService;
  
  //  얘네 왜 있는 걸 까?
  @Autowired
  private DefaultBeanValidator beanValidator;
  @Resource(name = "propertiesService")
  protected EgovPropertyService propertyService;
  @Resource(name = "EgovBBSAttributeManageService")
  private EgovBBSAttributeManageService bbsAttrbService;

  @RequestMapping("/menuList.do")
  public String menuList(@RequestParam(value = "siteId", required = false) String siteId,
      ModelMap model) throws Exception {
    System.out.println("\n\t:: Enterance menu List ::");
    ComDefaultCodeVO vo = new ComDefaultCodeVO();
    
    vo.setCodeId("COM004");
    List<?> codeResult = cmmUseService.selectCmmCodeDetail(vo);
    model.addAttribute("typeList", codeResult);

    vo.setCodeId("COM009");
    codeResult = cmmUseService.selectCmmCodeDetail(vo);
    model.addAttribute("attrbList", codeResult);
    
    //  -> include Form 필요한건지 모르겠음.
    BoardMaster boardMaster = new BoardMaster();
    model.addAttribute("boardMaster", boardMaster);
    //  <- include Form 필요한건지 모르겠음.
    
    return "management/menuManagement";
  }

  @RequestMapping("/selectHighMenuList.do")
  @ResponseBody
  @SuppressWarnings("unchecked")
  public String selectHighMenuList(@RequestParam(value = "siteId", required = false) String siteId)
      throws Exception {
    System.out.println("\n\t:: High Menu List START ::");
    System.out.printf("\tSite ID : %s\n", siteId);

    LoginVO user = EgovUserDetailsHelper.isAuthenticated()
        ? (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser() : null;
    JSONObject result = new JSONObject();
    
    MenuManageVO menuManageVO = new MenuManageVO();
    menuManageVO.setTmp_Id(user.getId());
    menuManageVO.setTmp_Password(user.getPassword());
    menuManageVO.setTmp_UserSe(user.getUserSe());
    menuManageVO.setTmp_Name(user.getName());
    menuManageVO.setTmp_Email(user.getEmail());
    menuManageVO.setTmp_OrgnztId(user.getOrgnztId());
    menuManageVO.setTmp_UniqId(user.getUniqId());
    menuManageVO.setSiteId(siteId);

    List<?> highMenuList = menuManageService.selectMainMenuHead(menuManageVO);
    result.put("highList", highMenuList);
    
    System.out.println("\n\t:: High Menu List END ::");
    System.out.printf("RETURN :\n%s\n", highMenuList.toString());
    return result.toString();
  }

  @RequestMapping("/selectMidList.do")
  @ResponseBody
  @SuppressWarnings("unchecked")
  public String selectMidList(@RequestParam(value = "siteId", required = false) String siteId,
      @RequestParam(value = "menuNo", required = false) int menuNo) throws Exception {
    System.out.println("\n\t:: Mid List START ::");
    System.out.printf("\tSite ID : %s\n\tMenu No : %d\n", siteId, menuNo );
    
    LoginVO user = EgovUserDetailsHelper.isAuthenticated()
        ? (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser() : null;
    JSONObject result = new JSONObject();

    MenuManageVO menuManageVO = new MenuManageVO();
    menuManageVO.setTmp_Id(user.getId());
    menuManageVO.setTmp_Password(user.getPassword());
    menuManageVO.setTmp_UserSe(user.getUserSe());
    menuManageVO.setTmp_Name(user.getName());
    menuManageVO.setTmp_Email(user.getEmail());
    menuManageVO.setTmp_OrgnztId(user.getOrgnztId());
    menuManageVO.setTmp_UniqId(user.getUniqId());
    menuManageVO.setSiteId(siteId);
    menuManageVO.setMenuNo(menuNo);

    List<?> midList = menuManageService.selectMidList(menuManageVO);
    result.put("midList", midList);
    
    System.out.println("\n\t:: Mid List End ::");
    System.out.printf("\tRETURN :\n%s\n", midList.toString());
    return result.toString();
  }

  @RequestMapping("/selectLowList.do")
  @ResponseBody
  @SuppressWarnings("unchecked")
  public String selectLowList(@RequestParam(value = "siteId", required = false) String siteId,
      @RequestParam(value = "menuNo", required = false) int menuNo) throws Exception {
    System.out.println("\n\t:: Low List START ::");
    System.out.printf("\tSit ID : %s\n\tMenu No : %d\n", siteId, menuNo);
    
    LoginVO user = EgovUserDetailsHelper.isAuthenticated()
        ? (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser() : null;
    JSONObject result = new JSONObject();

    MenuManageVO menuManageVO = new MenuManageVO();
    menuManageVO.setTmp_Id(user.getId());
    menuManageVO.setTmp_Password(user.getPassword());
    menuManageVO.setTmp_UserSe(user.getUserSe());
    menuManageVO.setTmp_Name(user.getName());
    menuManageVO.setTmp_Email(user.getEmail());
    menuManageVO.setTmp_OrgnztId(user.getOrgnztId());
    menuManageVO.setTmp_UniqId(user.getUniqId());
    menuManageVO.setSiteId(siteId);
    menuManageVO.setMenuNo(menuNo);

    List<?> lowList = menuManageService.selectMidList(menuManageVO);
    result.put("lowList", lowList);
    
    System.out.println("\n\t:: Low List END ::");
    System.out.printf("\tRETURN : \n%s\n", lowList.toString());
    return result.toString();
  }

  @RequestMapping("/insertMenu.do")
  @ResponseBody
  @SuppressWarnings("unchecked")
  public String insertMenu(MenuManageVO vo) throws Exception {
    System.out.println("\n\t:: Insert Menu ::");
    System.out.println("MenuManageVO :\n" + vo.toString());
    
    JSONObject result = new JSONObject();
    String resultMsg = menuManageService.insertMenu(vo);

    if (resultMsg == null) {
      result.put("결과", "성공");
    } else {
      result.put("결과", "실패");
    }
    
    System.out.println("\t:: Insert Menu RESULT ::");
    System.out.printf("\tResult : %s\n\tMSG :%s\n", resultMsg, result.toString());
    return result.toString();
  }

  @RequestMapping("/updateMenu.do")
  @ResponseBody
  public String updateMenu(MenuManageVO vo) throws Exception {
    System.out.println("\n\t:: Insert Menu ::");
    System.out.println("MenuManageVO :\n" + vo.toString());
    
    String resultMsg = menuManageService.updateMenu(vo);
    
    
    System.out.println("\t:: Insert Menu RESULT ::");
    System.out.printf("\tResult : %s\n", resultMsg);
    return resultMsg;
  }

  @SuppressWarnings("unchecked")
  @RequestMapping("/insertBBSMasterInf.do")
  @ResponseBody  //
  public String insertBBSMasterInf(
      @ModelAttribute("searchVO") BoardMasterVO boardMasterVO,
      @ModelAttribute("boardMaster") BoardMaster boardMaster,
      BindingResult bindingResult,
      SessionStatus status, ModelMap model) throws Exception {
    System.out.println("\n\n------>:: /cop/bbs/insertBBSMasterInf.do ::");
    LoginVO user = (LoginVO) EgovUserDetailsHelper.getAuthenticatedUser();
    Boolean isAuthenticated = EgovUserDetailsHelper.isAuthenticated();

    beanValidator.validate(boardMaster, bindingResult);
    System.out.println("bindingResult?\n" + bindingResult.toString());
    System.out.println(boardMaster.toString());
    
    
    JSONObject result = new JSONObject();
    
    
    String resultMsg = "";
    
    if (bindingResult.hasErrors()) {

//      ComDefaultCodeVO vo = new ComDefaultCodeVO();
//
//      vo.setCodeId("COM004");
//
//      List<?> codeResult = cmmUseService.selectCmmCodeDetail(vo);
//
//      model.addAttribute("typeList", codeResult);
//
//      vo.setCodeId("COM009");
//
//      codeResult = cmmUseService.selectCmmCodeDetail(vo);
//
//      model.addAttribute("attrbList", codeResult);
      result.put("RESULT", "FAIL");
      System.out.println("\n\n------>:: /cop/bbs/insertBBSMasterInf.do With Binding ERR ::\n\t" + result.toString());
      return "What Is It?";
    }

    if (isAuthenticated) {
      boardMaster.setFrstRegisterId(user.getUniqId());
      boardMaster.setUseAt("Y");
      boardMaster.setTrgetId("SYSTEMDEFAULT_REGIST");
      boardMaster.setPosblAtchFileSize(propertyService.getString("posblAtchFileSize"));

      resultMsg = bbsAttrbService.insertBBSMastetInf(boardMaster);
      if (resultMsg == null) {
        result.put("RESULT", "SUCCESS");
      } else {
        result.put("RESULT", "FAIL");
      }
    }
    result.put("boardMaster", boardMaster);
    System.out.println("\n\n------>:: /cop/bbs/insertBBSMasterInf.do WITHOUT Binding ERR ::\n\t" + result.toString());
//    return "forward:/cop/bbs/SelectBBSMasterInfs.do";
    return result.toString();
    
  }


}
//
