/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package egovframework.prvntn.fcltyCpctAcmslt.web;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.poi.hssf.util.CellRangeAddress;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springmodules.validation.commons.DefaultBeanValidator;
import egovframework.com.cmmn.LoginVO;
import egovframework.com.cmmn.service.CmmnService;
import egovframework.com.cmmn.util.EgovCommonUtil;
import egovframework.com.cmmn.util.EgovStringUtil;
import egovframework.com.cmmn.web.CmmnAbstractController;
import egovframework.prvntn.fcltyCpctAcmslt.service.fcltyCpctService;
import egovframework.prvntn.fcltyInfo.vo.FcltyInfoSearchVo;
import egovframework.rte.psl.dataaccess.util.EgovMap;

@SuppressWarnings("deprecation")
@Controller
public class fcltyCpctController extends CmmnAbstractController {
  @Resource(name = "EgovCommonUtil")
  private EgovCommonUtil EgovCommonUtil;

  @Resource(name = "fcltyCpctService")
  private fcltyCpctService fcltyCpctService;

  @Resource(name = "beanValidator")
  protected DefaultBeanValidator beanValidator;
  
  @Resource(name = "cmmnService")
	private CmmnService cmmnService;

  @RequestMapping(value = "/prvntn/fcltyCpct/fcltyCpctList.do")
  public String aqrmList(ModelMap model, HttpServletRequest request) throws Exception {
    LOGGER.debug(">> /ext/fcltyCpct/fcltyCpctList.do <<");
    FcltyInfoSearchVo fcltyInfoSearchVo = null;
    try {
      fcltyInfoSearchVo =
          (FcltyInfoSearchVo) request.getSession().getAttribute("fcltyCpctListVoSession");
      if (fcltyInfoSearchVo == null) {
        fcltyInfoSearchVo = new FcltyInfoSearchVo();
      }
    } catch (Exception e) {
      System.out.println("\n\t!!\texception >> " + e.getMessage());
    }
    /***********해경서 조회 세팅****************/
    LoginVO insttVO = (LoginVO) request.getSession().getAttribute("insttVO");
    if (fcltyInfoSearchVo.getNmpaOfeCode() == null || fcltyInfoSearchVo.getNmpaOfeCode().length()==0) {
      fcltyInfoSearchVo.setSearchNmpaOfeCodeNm(insttVO.getUserInsttNM());
      fcltyInfoSearchVo.setSearchLcltyGrcNm(insttVO.getUpInsttNM());
      fcltyInfoSearchVo.setNmpaOfeCode(insttVO.getUserInsttCD());
  
    }

    if (!EgovStringUtil.ObjEmptyChk(fcltyInfoSearchVo)) {
      model.addAttribute("fcltyCpctListVo", fcltyInfoSearchVo);
    }
    return "/prvntn/fcltyCpctAcmslt/fcltyCpctList";
  };

  // 상세보기
  @RequestMapping(value = "/prvntn/fcltyCpct/fcltyCpctView.do")
  public String refrnrelmView(ModelMap model, HttpServletRequest request,
      @ModelAttribute FcltyInfoSearchVo FcltyInfoSearchVo) throws Exception {
    request.getSession().setAttribute("fcltyCpctListVoSession", FcltyInfoSearchVo);

    EgovMap returnMap = new EgovMap();
    returnMap = fcltyCpctService.aqrmViewSelect(FcltyInfoSearchVo);
    model.addAttribute("modelData", returnMap);
    return "/prvntn/fcltyCpctAcmslt/fcltyCpctDetail";
  };

  // 전체 리스트 카운트
  @ResponseBody
  @RequestMapping(value = "/prvntn/fcltyCpct/fcltyCpctfirstDataListCnt.do")
  public EgovMap firstDataListCnt(HttpServletRequest request, ModelMap model,
      @ModelAttribute FcltyInfoSearchVo FcltyInfoSearchVo) throws Exception {
    EgovMap cntF = new EgovMap();

    // 해경서 조회
    LoginVO insttVO = (LoginVO) request.getSession().getAttribute("insttVO");
    /***********해경서 조회 세팅****************/
      ArrayList<String> insttCodeArray = new ArrayList<>();
      if (FcltyInfoSearchVo.getNmpaOfeCode() == null || FcltyInfoSearchVo.getNmpaOfeCode().length()==0) {
    	  FcltyInfoSearchVo.setNmpaOfeCode(insttVO.getUserInsttCD());
      }
      insttCodeArray = cmmnService.selectInsttCodeList(FcltyInfoSearchVo.getNmpaOfeCode());
      FcltyInfoSearchVo.setSearchNmpaOfeCodes(insttCodeArray);
    if (!EgovStringUtil.ObjEmptyChk(FcltyInfoSearchVo)) {
      try {
        cntF = fcltyCpctService.aqrmfirstDataListCnt(FcltyInfoSearchVo);
      } catch (Exception e) {
        e.printStackTrace();
      }
    } ;
    return cntF;
  };

  // 조회
  @ResponseBody
  @RequestMapping(value = "/prvntn/fcltyCpct/searchfcltyCpctListP.do")
  public List<EgovMap> searchRefrnrelmListP(HttpServletRequest request, ModelMap model,
      @ModelAttribute FcltyInfoSearchVo FcltyInfoSearchVo) throws Exception {
    List<EgovMap> list = new ArrayList<EgovMap>();

    // 해경서 조회
    LoginVO insttVO = (LoginVO) request.getSession().getAttribute("insttVO");
    ArrayList<String> insttCodeArray = new ArrayList<>();
    if (FcltyInfoSearchVo.getNmpaOfeCode() == null || FcltyInfoSearchVo.getNmpaOfeCode().length()==0) {
  	  FcltyInfoSearchVo.setNmpaOfeCode(insttVO.getUserInsttCD());
    }
    insttCodeArray = cmmnService.selectInsttCodeList(FcltyInfoSearchVo.getNmpaOfeCode());
    FcltyInfoSearchVo.setSearchNmpaOfeCodes(insttCodeArray);
    
    if (!EgovStringUtil.ObjEmptyChk(FcltyInfoSearchVo)) {
      try {
        list = fcltyCpctService.searchaqrmListP(FcltyInfoSearchVo);
      } catch (Exception e) {
        e.printStackTrace();
      }
    } ;
    return list;
  };

  // 조회 엑셀
  @RequestMapping(value = "/prvntn/fcltyCpct/searchfcltyCpctListPForExcel.do")
  public void searchfcltyCpctListPForExcel(HttpServletRequest request, ModelMap model,
      @ModelAttribute FcltyInfoSearchVo FcltyInfoSearchVo, HttpServletResponse response)
      throws Exception {

    ServletOutputStream sos = null;
    FcltyInfoSearchVo.setFirstRecordIndex("1");
    FcltyInfoSearchVo.setLastRecordIndex("110000000");
    List<EgovMap> list = new ArrayList<EgovMap>();
    
    LoginVO insttVO = (LoginVO) request.getSession().getAttribute("insttVO");
    ArrayList<String> insttCodeArray = new ArrayList<>();
    if (FcltyInfoSearchVo.getNmpaOfeCode() == null || FcltyInfoSearchVo.getNmpaOfeCode().length()==0) {
  	  FcltyInfoSearchVo.setNmpaOfeCode(insttVO.getUserInsttCD());
    }
    insttCodeArray = cmmnService.selectInsttCodeList(FcltyInfoSearchVo.getNmpaOfeCode());
    FcltyInfoSearchVo.setSearchNmpaOfeCodes(insttCodeArray);
    
    list = fcltyCpctService.searchaqrmListP(FcltyInfoSearchVo);

    // Workbook 생성
    XSSFWorkbook work = new XSSFWorkbook(); // Excel 2007 이상

    // *** Sheet-------------------------------------------------
    // Sheet 생성
    XSSFSheet sheet = work.createSheet("시설 출입검사 대상");

    sheet.setColumnWidth(1, 10000);
    sheet.setColumnWidth(2, 10000);
    sheet.setColumnWidth(3, 5000);
    sheet.setColumnWidth(4, 5000);
    sheet.setColumnWidth(5, 10000);
    sheet.setColumnWidth(6, 5000);
    sheet.setColumnWidth(7, 5000);
    sheet.setColumnWidth(8, 5000);
    sheet.setColumnWidth(8, 5000);

    // ----------------------------------------------------------
    XSSFRow row = null;
    XSSFCell cell = null;
    // ----------------------------------------------------------

    sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 5));

    CellStyle style = work.createCellStyle();
    style.setAlignment(XSSFCellStyle.ALIGN_CENTER);

    row = sheet.createRow(0);
    cell = row.createCell(0);
    cell.setCellValue("시설 출입검사 대상");
    cell.setCellStyle(style);

    row = sheet.createRow(1);
    cell = row.createCell(0);
    cell.setCellValue("연번");
    cell.setCellStyle(style);

    cell = row.createCell(1);
    cell.setCellValue("시설업체명");
    cell.setCellStyle(style);

    cell = row.createCell(2);
    cell.setCellValue("종류");
    cell.setCellStyle(style);

    cell = row.createCell(3);
    cell.setCellValue("영업구분");
    cell.setCellStyle(style);

    cell = row.createCell(4);
    cell.setCellValue("등록신고구분");
    cell.setCellStyle(style);

    cell = row.createCell(5);
    cell.setCellValue("소재지");
    cell.setCellStyle(style);

    cell = row.createCell(6);
    cell.setCellValue("이전검사일자");
    cell.setCellStyle(style);

    cell = row.createCell(7);
    cell.setCellValue("위반횟수");
    cell.setCellStyle(style);

    cell = row.createCell(8);
    cell.setCellValue("관리대상");
    cell.setCellStyle(style);

    for (int r = 0; r < list.size(); r++) {
      row = sheet.createRow(r + 2);
      for (short c = 0; c < 9; c++) {
        cell = row.createCell(c);
        if (c == 0) {
          cell.setCellValue(String.valueOf(r + 1));
          cell.setCellStyle(style);
        } else if (c == 1) {
          if (String.valueOf(list.get(r).get("fcltyNm")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("fcltyNm")));
          }
          cell.setCellStyle(style);
        } else if (c == 2) {
          if (String.valueOf(list.get(r).get("fcltyKndNm")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("fcltyKndNm")));
          }
          cell.setCellStyle(style);
        } else if (c == 3) {
          if (String.valueOf(list.get(r).get("bsnSeNm")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("bsnSeNm")));
          }
          cell.setCellStyle(style);
        } else if (c == 4) {
          if (String.valueOf(list.get(r).get("sttemntSeCode")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("sttemntSeCode")));
          }
          cell.setCellStyle(style);
        } else if (c == 5) {
          if (String.valueOf(list.get(r).get("adres")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("adres")));
          }
          cell.setCellStyle(style);
        } else if (c == 6) {
          if (String.valueOf(list.get(r).get("inspctDt")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("inspctDt")));
          }
          cell.setCellStyle(style);
        } else if (c == 7) {
          if (String.valueOf(list.get(r).get("cnt")).equals("null")) {
            cell.setCellValue("");
          } else {
            cell.setCellValue(String.valueOf(list.get(r).get("cnt")));
          }
          cell.setCellStyle(style);
        } else if (c == 8) {
          if (String.valueOf(list.get(r).get("emphsMngAt")).equals("Y")) {
            cell.setCellValue("중점관리");
          } else {
            cell.setCellValue("일반관리");
          }
          cell.setCellStyle(style);
        }
      }
    }

    // excel 파일 저장
    try {
      response.setHeader("Content-Disposition",
          "attachment;filename=" + URLEncoder.encode("시설 출입검사 대상.xlsx", "UTF-8"));
      response.setContentType("application/vnd.ms.excel");

      sos = response.getOutputStream();
      work.write(sos);
      sos.flush();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    } catch (IOException e1) {
      e1.printStackTrace();
    }
  };
};
