package kr.co.hanshinit.NeoCMS.cop.sns.web;

import javax.annotation.Resource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import kr.co.hanshinit.NeoCMS.cop.sns.fbApiKey.service.FbApiKey;
import kr.co.hanshinit.NeoCMS.cop.sns.fbApiKey.service.FbApiKeyService;
import kr.co.hanshinit.NeoCMS.cop.sns.service.SnsService;
import kr.co.hanshinit.NeoCMS.cop.sns.service.SnsVO;

/**
 * HANAM - SNS 스케쥴러 테스트 환경에서의 주석 처리.
 * @author jeaha
 */
@Component
public class SnsComponent {

  @Resource(name = "snsService")
  private SnsService snsService;
  
  @Resource(name="fbApiKeyService")
  private FbApiKeyService fbApiKeyService;
  
  Logger logger = LoggerFactory.getLogger(this.getClass());

  /* 트위터 스케쥴 */
//  @Scheduled(cron = "0 5 01 * * ?")
  //@Scheduled(cron = "0 */1 * * * ?")
  public void updateTwitterData() throws Exception {
    SnsVO snsVO = new SnsVO();
    logger.debug("\n\t>> updateTwitterData BGN <<");
    snsService.updateTwitterData(snsVO);
    logger.debug("\n\t>> updateTwitterData END <<\n\n\n");
  }

  /* 페이스북 스케쥴 */
//  @Scheduled(cron = "0 10 01 * * ?")
  @Scheduled(cron = "0 */1 * * * ?")
  public void updateFaceBookData() throws Exception {
    FbApiKey fbKey = fbApiKeyService.getApiKey("hanamstory");
    if( fbKey == null ) {
      logger.error("\n\tgetFaceBook PARAMETER IS NULL!!");
      return;
    }
    
    SnsVO snsVO = new SnsVO();
    logger.debug("\n\t>> updateFaceBookData BGN <<");
    snsService.updateFaceBookData(snsVO, fbKey);
    logger.debug("\n\t>> updateFaceBookData END <<\n\n\n");
  }

  /* 블로그 스케쥴 */
//  @Scheduled(cron = "0 15 01 * * ?")
  //@Scheduled(cron = "0 */1 * * * ?")
  public void updateBlogData() throws Exception {
    SnsVO snsVO = new SnsVO();
    logger.debug("\n\t>> updateBlogData BGN <<");
    snsService.updateBlogData(snsVO);
    logger.debug("\n\t>> updateBlogData END <<\n\n\n");
  }

  /* 유튜브 스케쥴 */
//  @Scheduled(cron = "0 20 01 * * ?")
  //@Scheduled(cron = "0 */1 * * * ?")
  public void updateYoutubeData() throws Exception {
    SnsVO snsVO = new SnsVO();
    logger.debug("\n\t>> updateYoutubeData BGN <<");
    snsService.updateYoutubeData(snsVO);
    logger.debug("\n\t>> updateYoutubeData END <<\n\n\n");
  }

}
