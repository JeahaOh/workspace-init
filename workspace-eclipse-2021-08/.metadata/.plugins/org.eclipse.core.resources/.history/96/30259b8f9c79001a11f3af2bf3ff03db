package com.gmt.enav.track.controller;

import java.util.HashMap;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.gmt.enav.track.service.TrackService;

@RestController
@RequestMapping("/track")
public class TrackController {
  
  private Logger logger = LoggerFactory.getLogger(this.getClass());
  
  @Autowired
  private TrackService service;
  
  @RequestMapping(value="/trackingShipRecords.do", method=RequestMethod.POST,
      produces="application/json;charset=UTF-8")
    @ResponseBody
    public ResponseEntity<Map<String, Object>> trackingShipRecords(
        HttpServletRequest req
        , HttpServletResponse res
        , @RequestParam Map<String, Object> params
      ) throws Exception {
    HashMap<String, Object> resMap = new HashMap<>();
    resMap.put("reqParams", params);
    
    // 넘어온 데이터
    logger.info( params.toString() );
    logger.info("\n\n[항적조회] > 영역으로 조회 ---------------------- >>");
    logger.info("Track Ship AREA (영역) : " + params.get("trackShipArea"));
    logger.info("Track Ship Search (검색선박) : " + params.get("trackShipSearch"));
    logger.info("Track Datetime (조회기간) : " + params.get("datetimes"));
    if( ((String) params.get("trackShipArea")).length() > 1 ) params.put("pumpFlag", "shipOnly");
    // 날짜 자르기 
    String tempDate = (String)params.get("datetimes");
    String dateTimes[] = tempDate.split(" - ");
    
    logger.info( dateTimes.toString() );
    
    params.put("startDate", dateTimes[0]);
    params.put("endDate", dateTimes[1]);
    
    
    logger.info("조회 시작 시간 : " + params.get("startDate"));
    logger.info("조회 종료 시간 : " + params.get("endDate"));
    
    logger.info("Track Ship Search Term (조회 간격, (분) 단위) : " + params.get("trackShipSearchTerm"));
    logger.info("Track Ship Pump Flag (표출설정) : " + params.get("trackShipPumpFlag"));
    logger.info("[항적조회] > ----------------------------------- >>");
    
    return new ResponseEntity<>(resMap, HttpStatus.OK);
  }
}
